# Generated by Django 4.1.1 on 2023-12-26 10:56

from django.db import migrations


def migrate_pole_practice_permissions(apps, schema_editor):
    # We can't import the EventType or Group model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    EventType = apps.get_model("booking", "EventType")
    AllowedGroup = apps.get_model("booking", "AllowedGroup")
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    pole_practice_ets = EventType.objects.filter(subtype="Pole practice")
    if pole_practice_ets.exists():
        pole_practice = pole_practice_ets.first()
        group, _ = Group.objects.get_or_create(name="regular student")
        allowed_group, _ = AllowedGroup.objects.get_or_create(group=group, description="only available to regular students")
        pole_practice.allowed_group = allowed_group
        pole_practice.save()

        permission = Permission.objects.get(codename="is_regular_student")
        users = permission.user_set.all()
        for user in users:
            user.groups.add(group)


def reverse_pole_practice_permissions(apps, schema_editor):
    # We can't import the EventType or Group model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    AllowedGroup = apps.get_model("booking", "AllowedGroup")
    Permission = apps.get_model("auth", "Permission")

    allowed_group = AllowedGroup.objects.filter(name="regular student")
    if allowed_group.exists():
        group = allowed_group.first().group
        permission, _ = Permission.objects.get_or_create(codename="is_regular_student")
        users = group.user_set.all()
        for user in users:
            user.permissions.add(permission)


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0090_allowedgroup_event_allowed_group_and_more'),
    ]

    operations = [
        migrations.RunPython(migrate_pole_practice_permissions, reverse_code=migrations.RunPython.noop),
    ]
