# Generated by Django 3.0.3 on 2020-03-14 11:06

from django.db import migrations

DISCLAIMER_TERMS_AT_2020_05_01 = """I recognise that I may be asked to participate in some strenuous
exercise during the course and that such participation may present a heightened risk of
injury or ill health. All risks will be fully explained and I do NOT hold The Watermelon
Studio and any of their staff responsible for any harm that may come to me should I decide
to participate in such tasks. I knowingly assume all risks associated with participation,
even if arising from negligence of the participants or others and assume full responsibility
for my participation. I certify that I am in good physical condition can participate in the
courses offered by The Watermelon Studio. I will not participate if pregnant or if I have
given birth within the previous 6 weeks or C-section within the previous 12 weeks and I
will update my teacher on any new medical condition/injury throughout my time at
The Watermelon Studio.  I will not participate under the influence of drugs or alcohol.
Other teachers/instructors may use the information submitted in this form to help keep the
chances of any injury to a minimum. I also hereby agree to follow all rules set out by The
Watermelon Studio. I understand that photographs taken at the studio may be used on the studio's
website and social media pages.  I have read and agree to the terms and conditions on the website."""

MEDICAL_TREATMENT_TERMS_AT_2020_05_01 = "I give permission for myself to receive medical treatment in the event of an accident"

OVER_18_STATEMENT_AT_2020_05_01 = "I confirm that I am aged 18 or over"


def create_v1_disclaimer_content(disclaimer_content_model):
    # Generate a first DisclaimerContent instance with the terms as of 2020-03-14 (as signed by the
    # current active disclaimers
    assert disclaimer_content_model.objects.exists() is False
    formatted_disclaimer_terms = DISCLAIMER_TERMS_AT_2020_05_01.replace("\n", " ")

    v1_disclaimer_content = disclaimer_content_model.objects.create(
        disclaimer_terms=formatted_disclaimer_terms,
        medical_treatment_terms=MEDICAL_TREATMENT_TERMS_AT_2020_05_01,
        over_18_statement=OVER_18_STATEMENT_AT_2020_05_01,
        version=1.0
    )
    return v1_disclaimer_content


def generate_versioned_disclaimers(apps, schema_editor):
    DisclaimerContent = apps.get_model('accounts', 'DisclaimerContent')
    OnlineDisclaimer = apps.get_model('accounts', 'OnlineDisclaimer')
    NonRegisteredDisclaimer = apps.get_model('accounts', 'NonRegisteredDisclaimer')
    ArchivedDisclaimer = apps.get_model('accounts', 'ArchivedDisclaimer')
    v1_disclaimer_content = create_v1_disclaimer_content(DisclaimerContent)

    disclaimers_with_v1_terms = [
        *list(OnlineDisclaimer.objects.filter(
            disclaimer_terms=v1_disclaimer_content.disclaimer_terms,
        )),
        *list(NonRegisteredDisclaimer.objects.filter(
            disclaimer_terms=v1_disclaimer_content.disclaimer_terms,
        )),
        *list(ArchivedDisclaimer.objects.filter(
            disclaimer_terms=v1_disclaimer_content.disclaimer_terms,
        ))
    ]

    # Add V1 disclaimer version for any disclaimers with the current terms
    for disclaimer in disclaimers_with_v1_terms:
        disclaimer.version = v1_disclaimer_content.version
        disclaimer.save()

    # get the remaining disclaimers' terms
    online_disclaimers_version_0_terms = list(OnlineDisclaimer.objects.filter(version=0)\
        .distinct("disclaimer_terms").values_list("disclaimer_terms", flat=True))
    nonreg_disclaimers_version_0_terms = list(NonRegisteredDisclaimer.objects.filter(version=0)\
        .distinct("disclaimer_terms").values_list("disclaimer_terms", flat=True))
    archived_disclaimers_version_0_terms = list(ArchivedDisclaimer.objects.filter(version=0)\
        .distinct("disclaimer_terms").values_list("disclaimer_terms", flat=True))

    # Find past terms
    distinct_version_0_terms = set(
        [*online_disclaimers_version_0_terms, *nonreg_disclaimers_version_0_terms, *archived_disclaimers_version_0_terms]
    )

    # find last online disclaimer with each set of terms to determine version order
    latest_disclaimer_per_version_0_dates = {}
    for version_0_terms in distinct_version_0_terms:
        latest_disclaimer = OnlineDisclaimer.objects.filter(disclaimer_terms=version_0_terms).latest("id")
        latest_disclaimer_per_version_0_dates[version_0_terms] = latest_disclaimer.date

    version_0_disclaimer_terms = sorted(
        latest_disclaimer_per_version_0_dates.keys(), key=lambda x: latest_disclaimer_per_version_0_dates[x], reverse=True
    )
    # Create disclaimer versions for past disclaimers
    version_0x_disclaimers = {}
    for version_increment, terms in enumerate(version_0_disclaimer_terms, start=1):
        version = 0.1 * version_increment
        DisclaimerContent.objects.create(
            version=version,
            disclaimer_terms=terms,
            medical_treatment_terms=MEDICAL_TREATMENT_TERMS_AT_2020_05_01,
            over_18_statement=OVER_18_STATEMENT_AT_2020_05_01,
        )
        version_0x_disclaimers[terms] = version

    # Update old disclaimers with their relevant versions
    disclaimers_with_pre_v1_terms = {
        OnlineDisclaimer: OnlineDisclaimer.objects.filter(version=0),
        NonRegisteredDisclaimer: NonRegisteredDisclaimer.objects.filter(version=0),
        ArchivedDisclaimer: ArchivedDisclaimer.objects.filter(version=0)
    }

    for disclaimer_model, disclaimers  in disclaimers_with_pre_v1_terms.items():
        for disclaimer in disclaimers:
            version = version_0x_disclaimers[disclaimer.disclaimer_terms]
            disclaimer.version = version
            disclaimer.save()


def reverse_add_disclaimer_info(apps, schema_editor):
    DisclaimerContent = apps.get_model('accounts', 'DisclaimerContent')
    OnlineDisclaimer = apps.get_model('accounts', 'OnlineDisclaimer')
    NonRegisteredDisclaimer = apps.get_model('accounts', 'NonRegisteredDisclaimer')
    ArchivedDisclaimer = apps.get_model('accounts', 'ArchivedDisclaimer')

    disclaimer_versions = {
        disclaimer_content.version: disclaimer_content for disclaimer_content in DisclaimerContent.objects.all()
    }

    for disclaimer in [*OnlineDisclaimer.objects.all(), *NonRegisteredDisclaimer.objects.all(), *ArchivedDisclaimer.objects.all()]:
        disclaimer_version = disclaimer_versions[disclaimer.version]
        disclaimer.disclaimer_terms = disclaimer_version.disclaimer_terms
        disclaimer.medical_treatment_terms = disclaimer_version.medical_treatment_terms
        disclaimer.over_18_statement = disclaimer_version.over_18_statement
        disclaimer.save()


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0014_add_version_to_disclaimers'),
    ]

    operations = [
        migrations.RunPython(
            generate_versioned_disclaimers, reverse_code=reverse_add_disclaimer_info
        )
    ]
